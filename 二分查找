class Solution {
public:
    /**
     * 二分查找
     * @param n int整型 数组长度
     * @param v int整型 查找值
     * @param a int整型vector 有序数组
     * @return int整型
     */
    int upper_bound_(int n, int v, vector<int>& a) {
        // write code here
        int begin=0;
        int end=n-1;
        int mid=(begin+end)/2;
        while(begin<end)
        {
            if(a[end]<v)
                return n+1;
            if(a[mid]>=v)
            {
                if(a[mid-1]<v||mid==0)
                    return mid+1;
                end=mid;
                mid=(begin+end)/2;
            }
            else
            {
                begin=mid;
                mid=(begin+end)/2;
            }
        }
        return end+1;
    }
};
